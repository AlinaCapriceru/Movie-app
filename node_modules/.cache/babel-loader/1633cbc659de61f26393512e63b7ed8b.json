{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santa\\\\Desktop\\\\project\\\\src\\\\context\\\\GlobalState.js\",\n    _s = $RefreshSig$();\n\nimport { createContext, useEffect, useReducer } from \"react\";\nimport { AppReducer } from \"./AppReducer\"; // Initial State\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst initialState = {\n  // watchList: [],\n  // watched: [],\n  // local storage\n  watchList: localStorage.getItem(\"watchList\") ? JSON.parse(localStorage.getItem(\"watchList\")) : [],\n  watched: localStorage.getItem(\"watched\") ? JSON.parse(localStorage.getItem(\"watched\")) : []\n}; // create Context\n\nexport const GlobalContext = /*#__PURE__*/createContext();\nexport const GlobalContextProvider = ({\n  children\n}) => {\n  _s();\n\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n  useEffect(() => {\n    localStorage.setItem(\"watchList\", JSON.stringify(state.watchList));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]); // actions\n\n  const addMovieToWatchlist = movie => {\n    console.log(\"1\");\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCH_LIST\",\n      payload: movie\n    });\n  };\n\n  const removeMovieFromWatchList = id => {\n    dispatch({\n      type: \"REMOVE_MOVIE_FROM_WATCHLIST\",\n      payload: id\n    });\n  };\n\n  const addMovieToWatched = movie => {\n    console.log(\"2\");\n    dispatch({\n      type: \"ADD_MOVIE_TO_WATCHED\",\n      payload: movie\n    });\n  };\n\n  const moveToWatchlist = movie => {\n    dispatch({\n      type: \"MOVE_TO_WATCHLIST\",\n      payload: movie\n    });\n  };\n\n  const removeFromWatched = id => {\n    dispatch({\n      type: \"REMOVE_FROM_WATCHED\",\n      payload: id\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      watchList: state.watchList,\n      watched: state.watched,\n      addMovieToWatchlist,\n      removeMovieFromWatchList,\n      addMovieToWatched,\n      moveToWatchlist,\n      removeFromWatched\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GlobalContextProvider, \"bgCdjuTOmPdSBRwTap80EFd9Y3U=\");\n\n_c = GlobalContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"GlobalContextProvider\");","map":{"version":3,"sources":["C:/Users/Santa/Desktop/project/src/context/GlobalState.js"],"names":["createContext","useEffect","useReducer","AppReducer","initialState","watchList","localStorage","getItem","JSON","parse","watched","GlobalContext","GlobalContextProvider","children","state","dispatch","setItem","stringify","addMovieToWatchlist","movie","console","log","type","payload","removeMovieFromWatchList","id","addMovieToWatched","moveToWatchlist","removeFromWatched"],"mappings":";;;AAAA,SAASA,aAAT,EAAwBC,SAAxB,EAAmCC,UAAnC,QAAqD,OAArD;AACA,SAASC,UAAT,QAA2B,cAA3B,C,CAEA;;;AACA,MAAMC,YAAY,GAAG;AACnB;AACA;AAEA;AACAC,EAAAA,SAAS,EAAEC,YAAY,CAACC,OAAb,CAAqB,WAArB,IACPC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADO,GAEP,EAPe;AAQnBG,EAAAA,OAAO,EAAEJ,YAAY,CAACC,OAAb,CAAqB,SAArB,IACLC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,SAArB,CAAX,CADK,GAEL;AAVe,CAArB,C,CAaA;;AAEA,OAAO,MAAMI,aAAa,gBAAGX,aAAa,EAAnC;AAEP,OAAO,MAAMY,qBAAqB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAAA;;AACrD,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBb,UAAU,CAACC,UAAD,EAAaC,YAAb,CAApC;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,YAAY,CAACU,OAAb,CAAqB,WAArB,EAAkCR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACT,SAArB,CAAlC;AACAC,IAAAA,YAAY,CAACU,OAAb,CAAqB,SAArB,EAAgCR,IAAI,CAACS,SAAL,CAAeH,KAAK,CAACJ,OAArB,CAAhC;AACD,GAHQ,EAGN,CAACI,KAAD,CAHM,CAAT,CAHqD,CAQrD;;AACA,QAAMI,mBAAmB,GAAIC,KAAD,IAAW;AACrCC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAN,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,yBAAR;AAAmCC,MAAAA,OAAO,EAAEJ;AAA5C,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMK,wBAAwB,GAAIC,EAAD,IAAQ;AACvCV,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,6BAAR;AAAuCC,MAAAA,OAAO,EAAEE;AAAhD,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMC,iBAAiB,GAAIP,KAAD,IAAW;AACnCC,IAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ;AACAN,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,sBAAR;AAAgCC,MAAAA,OAAO,EAAEJ;AAAzC,KAAD,CAAR;AACD,GAHD;;AAKA,QAAMQ,eAAe,GAAIR,KAAD,IAAW;AACjCJ,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,mBAAR;AAA6BC,MAAAA,OAAO,EAAEJ;AAAtC,KAAD,CAAR;AACD,GAFD;;AAIA,QAAMS,iBAAiB,GAAIH,EAAD,IAAQ;AAChCV,IAAAA,QAAQ,CAAC;AAAEO,MAAAA,IAAI,EAAE,qBAAR;AAA+BC,MAAAA,OAAO,EAAEE;AAAxC,KAAD,CAAR;AACD,GAFD;;AAIA,sBACE,QAAC,aAAD,CAAe,QAAf;AACE,IAAA,KAAK,EAAE;AACLpB,MAAAA,SAAS,EAAES,KAAK,CAACT,SADZ;AAELK,MAAAA,OAAO,EAAEI,KAAK,CAACJ,OAFV;AAGLQ,MAAAA,mBAHK;AAILM,MAAAA,wBAJK;AAKLE,MAAAA,iBALK;AAMLC,MAAAA,eANK;AAOLC,MAAAA;AAPK,KADT;AAAA,cAWGf;AAXH;AAAA;AAAA;AAAA;AAAA,UADF;AAeD,CA9CM;;GAAMD,qB;;KAAAA,qB","sourcesContent":["import { createContext, useEffect, useReducer } from \"react\";\nimport { AppReducer } from \"./AppReducer\";\n\n// Initial State\nconst initialState = {\n  // watchList: [],\n  // watched: [],\n\n  // local storage\n  watchList: localStorage.getItem(\"watchList\")\n    ? JSON.parse(localStorage.getItem(\"watchList\"))\n    : [],\n  watched: localStorage.getItem(\"watched\")\n    ? JSON.parse(localStorage.getItem(\"watched\"))\n    : [],\n};\n\n// create Context\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = ({ children }) => {\n  const [state, dispatch] = useReducer(AppReducer, initialState);\n\n  useEffect(() => {\n    localStorage.setItem(\"watchList\", JSON.stringify(state.watchList));\n    localStorage.setItem(\"watched\", JSON.stringify(state.watched));\n  }, [state]);\n\n  // actions\n  const addMovieToWatchlist = (movie) => {\n    console.log(\"1\");\n    dispatch({ type: \"ADD_MOVIE_TO_WATCH_LIST\", payload: movie });\n  };\n\n  const removeMovieFromWatchList = (id) => {\n    dispatch({ type: \"REMOVE_MOVIE_FROM_WATCHLIST\", payload: id });\n  };\n\n  const addMovieToWatched = (movie) => {\n    console.log(\"2\");\n    dispatch({ type: \"ADD_MOVIE_TO_WATCHED\", payload: movie });\n  };\n\n  const moveToWatchlist = (movie) => {\n    dispatch({ type: \"MOVE_TO_WATCHLIST\", payload: movie });\n  };\n\n  const removeFromWatched = (id) => {\n    dispatch({ type: \"REMOVE_FROM_WATCHED\", payload: id });\n  };\n\n  return (\n    <GlobalContext.Provider\n      value={{\n        watchList: state.watchList,\n        watched: state.watched,\n        addMovieToWatchlist,\n        removeMovieFromWatchList,\n        addMovieToWatched,\n        moveToWatchlist,\n        removeFromWatched,\n      }}\n    >\n      {children}\n    </GlobalContext.Provider>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}