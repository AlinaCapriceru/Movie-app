{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Santa\\\\Desktop\\\\project\\\\src\\\\components\\\\ResultCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ResultCard = ({\n  movie\n}) => {\n  _s();\n\n  const {\n    addMovieToWatchlist,\n    addMovieToWatched,\n    watchList,\n    watched\n  } = useContext(GlobalContext);\n  let storedMovie = watchList.find(mov => mov.id === movie.id);\n  let storedMovieWatched = watched.find(mov => mov.id === movie.id);\n  const watchListDisabled = storedMovie ? true : storedMovieWatched ? true : false;\n  const watchedDisabled = storedMovieWatched ? true : false;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"result-card\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"poster-wrapper\",\n      children: movie.poster_path ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: `https://image.tmdb.org/t/p/w200${movie.poster_path}`,\n        alt: `${movie.title} Poster`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"filler-poster\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"header\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"title\",\n          children: movie.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          className: \"release-date\",\n          children: movie.release_date\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"controls\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: watchListDisabled,\n          onClick: () => {\n            addMovieToWatchlist(movie);\n            console.log(\"action added\");\n          },\n          children: \"Add to Watchlist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          disabled: watchedDisabled,\n          onClick: () => {\n            addMovieToWatched(movie);\n            console.log(\"action watched\");\n          },\n          children: \"Add to Watched\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(ResultCard, \"yNdLOP1xmUMYEZqqI6lPgxIb/Zg=\");\n\n_c = ResultCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResultCard\");","map":{"version":3,"sources":["C:/Users/Santa/Desktop/project/src/components/ResultCard.js"],"names":["React","useContext","GlobalContext","ResultCard","movie","addMovieToWatchlist","addMovieToWatched","watchList","watched","storedMovie","find","mov","id","storedMovieWatched","watchListDisabled","watchedDisabled","poster_path","title","release_date","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,aAAT,QAA8B,wBAA9B;;AAEA,OAAO,MAAMC,UAAU,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAAA;;AACvC,QAAM;AACJC,IAAAA,mBADI;AAEJC,IAAAA,iBAFI;AAGJC,IAAAA,SAHI;AAIJC,IAAAA;AAJI,MAKFP,UAAU,CAACC,aAAD,CALd;AAOA,MAAIO,WAAW,GAAGF,SAAS,CAACG,IAAV,CAAgBC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWR,KAAK,CAACQ,EAAzC,CAAlB;AACA,MAAIC,kBAAkB,GAAGL,OAAO,CAACE,IAAR,CAAcC,GAAD,IAASA,GAAG,CAACC,EAAJ,KAAWR,KAAK,CAACQ,EAAvC,CAAzB;AAEA,QAAME,iBAAiB,GAAGL,WAAW,GACjC,IADiC,GAEjCI,kBAAkB,GAClB,IADkB,GAElB,KAJJ;AAMA,QAAME,eAAe,GAAGF,kBAAkB,GAAG,IAAH,GAAU,KAApD;AAEA,sBACE;AAAK,IAAA,SAAS,EAAC,aAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,gBACGT,KAAK,CAACY,WAAN,gBACC;AACE,QAAA,GAAG,EAAG,kCAAiCZ,KAAK,CAACY,WAAY,EAD3D;AAEE,QAAA,GAAG,EAAG,GAAEZ,KAAK,CAACa,KAAM;AAFtB;AAAA;AAAA;AAAA;AAAA,cADD,gBAMC;AAAK,QAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA;AAPJ;AAAA;AAAA;AAAA;AAAA,YADF,eAYE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,8BACE;AAAK,QAAA,SAAS,EAAC,QAAf;AAAA,gCACE;AAAI,UAAA,SAAS,EAAC,OAAd;AAAA,oBAAuBb,KAAK,CAACa;AAA7B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAI,UAAA,SAAS,EAAC,cAAd;AAAA,oBAA8Bb,KAAK,CAACc;AAApC;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAME;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,gCACE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,QAAQ,EAAEJ,iBAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACbT,YAAAA,mBAAmB,CAACD,KAAD,CAAnB;AACAe,YAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAYE;AACE,UAAA,SAAS,EAAC,KADZ;AAEE,UAAA,QAAQ,EAAEL,eAFZ;AAGE,UAAA,OAAO,EAAE,MAAM;AACbT,YAAAA,iBAAiB,CAACF,KAAD,CAAjB;AACAe,YAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACD,WANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAZF;AAAA;AAAA;AAAA;AAAA;AAAA,cANF;AAAA;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6CD,CAhEM;;GAAMjB,U;;KAAAA,U","sourcesContent":["import React, { useContext } from \"react\";\nimport { GlobalContext } from \"../context/GlobalState\";\n\nexport const ResultCard = ({ movie }) => {\n  const {\n    addMovieToWatchlist,\n    addMovieToWatched,\n    watchList,\n    watched,\n  } = useContext(GlobalContext);\n\n  let storedMovie = watchList.find((mov) => mov.id === movie.id);\n  let storedMovieWatched = watched.find((mov) => mov.id === movie.id);\n\n  const watchListDisabled = storedMovie\n    ? true\n    : storedMovieWatched\n    ? true\n    : false;\n\n  const watchedDisabled = storedMovieWatched ? true : false;\n\n  return (\n    <div className=\"result-card\">\n      <div className=\"poster-wrapper\">\n        {movie.poster_path ? (\n          <img\n            src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`}\n            alt={`${movie.title} Poster`}\n          />\n        ) : (\n          <div className=\"filler-poster\" />\n        )}\n      </div>\n\n      <div className=\"info\">\n        <div className=\"header\">\n          <h3 className=\"title\">{movie.title}</h3>\n          <h4 className=\"release-date\">{movie.release_date}</h4>\n        </div>\n\n        <div className=\"controls\">\n          <button\n            className=\"btn\"\n            disabled={watchListDisabled}\n            onClick={() => {\n              addMovieToWatchlist(movie);\n              console.log(\"action added\");\n            }}\n          >\n            Add to Watchlist\n          </button>\n\n          <button\n            className=\"btn\"\n            disabled={watchedDisabled}\n            onClick={() => {\n              addMovieToWatched(movie);\n              console.log(\"action watched\");\n            }}\n          >\n            Add to Watched\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}